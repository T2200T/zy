#include "stdio.h"
#include "string.h"
#include "conio.h"
#include "stdlib.h"

#define MAXCOUNT 6

struct Account{
	int zh;
	char name[20];
	int password;
	double money;
	int status;
};
Account user[6];

int countorl = 1;        //控制结束的变量
int order = 1;           //控制顺序的变量
int confirmpassword[6];  //确认用的密码

void ShowMeau_1();
void ShowMeau_2();
void Authoring(Account user[]);
double Desposit(Account user[],int i);
double Draw(Account user[],int i);
void Transfer(Account user[],int i);
void Show_accounts(Account user[]);
void Show_The_user(Account user[],int i);
void Incomplete();
void Report(Account user[]);
void Thaw(Account user[],int i);
void Cancel(Account user[],int i);
int ATMsystem(Account user[],int i);
void Enroll(Account user[]);
void Change_Pass(Account user[],int i);
void BaoCunToFile(Account user[], int n, char sFileName[]);
void DuQuFromFile(Account user[], int n, char sFileName[]);

//主界面
int main()
{
	int a;

	memset(user,0,sizeof(user));

	DuQuFromFile(user, MAXCOUNT, "D:\\atm.txt");

	while(1)
	{
		system("cls");
		ShowMeau_1();

		printf("请选择相应菜单项：");
		scanf("%d",&a);

		switch(a)
		{
		case 1:Authoring(user);
			break;

		case 2:Enroll(user);
			break;



		case 3:printf("谢谢使用，再见！\n");
			BaoCunToFile(user, MAXCOUNT, "D:\\atm.txt");
            return 0;

		case 4:Show_accounts(user);
			break;
		}
	}
	
}

//登录
void Enroll(Account user[])
{
	system("cls");
	Account user2;
	int i = 0;
	char mm[10];
	int pass;

	printf("请输入你的账号：");
	scanf("%d",&user2.zh);

	printf("请输入密码：");
	while((mm[i] = getch()) != '\r')
	{
		if(mm[i] == '\b')
		{
			printf("\b \b");
			i--;
		}
		else
		{
			printf("*");
			i++;
		}
	}

	mm[i] = '\0';
	pass = atoi(mm);;

	printf("\n");

	for(i = 1;i <= 6;i++)
	{
		if(user2.zh == user[i].zh)
		{
			if(pass == user[i].password)
			{
				ATMsystem(user,i);
				break;
			}
			else
			{
				printf("账号或密码错误！\n\n");
				char ch = getchar();
				ch = getchar();
			}
		}
	}
	
}

//用户界面
int ATMsystem(Account user[],int i)
{
	int a;

	

	while(1)
	{
		system("cls");
		ShowMeau_2();

		printf("请选择相应菜单项：");
		scanf("%d",&a);
		printf("\n\n");

		switch(a)
		{
		case 1:{
			Desposit(user,i);
			break;
			   }

		case 2:{
			Draw(user,i);
			break;
			   }

		case 3:{
			Show_The_user(user,i);
			break;
			   }

		case 4:{
			Transfer(user,i);
			break;
			   }

	

		case 5:{
			Cancel(user,i);
			return 0;
			   };
		case 6:
			Change_Pass(user,i);
			break;

		case 7:{
			printf("正在退出……\n");
			char ch = getchar();
			return a;
			   }
		}
	}
    
}

//菜单1
void ShowMeau_1()
{
	printf("\t\t主界面\n");
	printf("*******************************************\n");
	printf("*\t请选择你的操作：\n");
	printf("*\t1.开户\t2.登录\t3.退出系统\n");
	printf("*\t4.显示目前账户数组信息\n");
	printf("*******************************************\n");
}

//菜单2
void ShowMeau_2()
{
	system("cls");
	printf("\t\t欢迎使用银行管理系统ATM\n");
	printf("***********************************************\n");
	printf("*\t请选择你的操作：\n");
	printf("*\t1.存款\t2.取款\t3.查询\t4.转账\n");
	printf("*\t5.销户\t6.改密\t7.退回主界面\n");
	printf("************************************************\n");
}

//开户
void Authoring(Account user[])
{
	system("cls");
	char ch;

	if(user[order].zh!=0)
	{
		order++;
	}



	for(;user[order].zh == 0 && order < 7;)
	{
		user[order].zh = 10000 + order;
		printf("现在开始创造账户……\n\n");
		printf("请输入用户姓名：");
		scanf("%s",&user[order].name);
		printf("请输入六位数密码：");
		scanf("%d",&user[order].password);

		if(user[order].password >= 100000 && user[order].password <= 999999)
		{
			printf("请再次输入密码确认：");
			scanf("%d",&confirmpassword[order]);

			if(user[order].password == confirmpassword[order])
			{
				printf("开户成功！\n");
				printf("您的账号是：%d",user[order].zh);
				order++;
				ch = getchar();
				ch = getchar();
				break;
			}
			else
			{
				printf("密码不一致，开户失败\n");
				user[order].password = 0;
				confirmpassword[order] = 0;
				ch = getchar();
				ch = getchar();
				break;
			}
		}
		else
		{
			printf("对不起，密码不足六位，无法开户！\n");
			user[order].zh = 0;
			memset(user[order].name,0,sizeof(user[order].name));
			user[order].password = 0;
			ch = getchar();
			ch = getchar();
			break;
		}
	}

	if(order >= 7)
	{
		printf("\n对不起，该机器账号已满，无法注册！\n");
		ch = getchar();
		ch = getchar();
	}
}

//存款
double Desposit(Account user[],int i)
{
	system("cls");
	double desposit_money = 0;
	printf("请输入存储的金额：");
	scanf("%lf",&desposit_money);

	user[i].money += desposit_money;
	printf("当前余额为：%.2lf\n\n",user[i].money);
	char ch = getchar();
	ch = getchar();
	return user[i].money;
}

//取款
double Draw(Account user[],int i)
{
	system("cls");
	double draw_money = 0;
	printf("请输入取出的金额：");
	scanf("%lf",&draw_money);

	if(draw_money < user[i].money)
	{
		printf("当前余额为：%.2lf\n\n",user[i].money -= draw_money);
		char ch = getchar();
		ch = getchar();
		return user[i].money;
	}
	else
	{
		printf("对不起，余额不足，无法取出\n\n");
		char ch = getchar();
		ch = getchar();
		return -1;
	}
}

//转账
void Transfer(Account user[],int i)
{
	system("cls");
	Account target;
	printf("请输入要转账的对象的账号：");
	scanf("%d",&target.zh);

	for(int j = 1;j <= 6;j++)
	{
		if(target.zh == user[j].zh)
		{
			double transfer_money = 0;
			printf("请输入转账的金额：");
			scanf("%lf",&transfer_money);

			if(transfer_money <= user[i].money)
			{
				user[j].money += transfer_money;
				user[i].money -= transfer_money;
				printf("当前余额为：%.2lf\n\n",user[i].money);
				char ch = getchar();
				ch = getchar();
				break;
			}
			else
			{
				printf("对不起，余额不足！\n\n");
				printf("当前余额为：%.2lf\n\n",user[i].money);
				char ch = getchar();
				ch = getchar();
				break;
			}
		}
	}

	if(target.zh != user[j].zh)
	{
		printf("对不起，查无此人！\n\n");
		char ch = getchar();
		ch = getchar();
	}
}

//还未完成
void Incomplete()
{
	system("cls");
	printf("还未开发此功能\n敬请期待……\n\n");
	char ch = getchar();
	ch = getchar();
}

//显示目前账户数组信息
void Show_accounts(Account user[])
{
	system("cls");
	printf("账号数组内容如下：\n");
	for(int i = 1;i <= 6;i++)
	{
		printf("账户：%d\t",user[i].zh);
		printf("用户名：%s\t",user[i].name);
		printf("密码：%d\t",user[i].password);
		printf("余额：%.2lf\t",user[i].money);
		printf("状态：%d\n",user[i].status);
	}

	char ch = getchar();
	ch = getchar();
}

//查询
void Show_The_user(Account user[],int i)
{
	system("cls");

	printf("账户：%d\n",user[i].zh);
	printf("用户名：%s\n",user[i].name);
	printf("密码：%d\n",user[i].password);
	printf("余额：%.2lf\n",user[i].money);
	printf("状态：%d\n",user[i].status);

	char ch = getchar();
	ch = getchar();
}
//销户
void Cancel(Account user[],int i)
{
	system("cls");
	char ch;

	printf("\n正在销毁账号数据……\n\n");
	ch = getchar();
	ch = getchar();

	user[i].money = 0;
	memset(user[i].name,0,sizeof(user[i].name));
	user[i].password = 0;
	user[i].status = 0;
	user[i].zh = 0;
	confirmpassword[i] = 0;
	order = i;

	printf("销户完成！\n");

	ch = getchar();
}

//改密
void Change_Pass(Account user[],int i)
{
	system("cls");
	int check;
	char ch;

	printf("\n请输入现在的密码：");
	scanf("%d",&check);

	if(check == confirmpassword[i])
	{
		printf("请输入新密码：");
		scanf("%d",&confirmpassword[i]);
		printf("请再次输入新密码：");
		scanf("%d",&check);

		if(check == confirmpassword[i])
		{
			user[i].password = check;
			printf("\n更改密码成功！\n");
			ch = getchar();
			ch = getchar();
		}
		else
		{
			printf("\n新密码错误，无法更改!\n");
			ch = getchar();
			ch = getchar();
		}
	}
	else
	{
		printf("\n密码错误，无法更改!\n");
		ch = getchar();
		ch = getchar();
	}
}
void BaoCunToFile(Account user[], int n, char sFileName[])
{
	////////开始保存文件了哈......
	//1. 定义文件指针变量
	FILE *fp;

	//2. 打开文件
	fp = fopen(sFileName, "w");
	if (fp == NULL)
	{
		printf("打开文件失败！\n");
		return;
	}

	//3. 保存到文件
	for (int i = 0; i < n; i++)
	{
		fwrite(&user[i], sizeof(Account), 1, fp); //二进制信息		
	}

	//4. 关闭文件
	fclose(fp);
}

void DuQuFromFile(Account user[], int n, char sFileName[])
{
	////////开始读取文件了哈......
	//1. 定义文件指针变量
	FILE *fp;

	//2. 打开文件
	fp = fopen(sFileName, "r");
	if (fp == NULL)
	{
		printf("打开文件失败！\n");
		return;
	}

	//3. 读取文件
	for (int i = 0; i < n; i++)
	{
		fread(&user[i], sizeof(Account), 1, fp); //二进制信息		
	}

	//4. 关闭文件
	fclose(fp);
}







